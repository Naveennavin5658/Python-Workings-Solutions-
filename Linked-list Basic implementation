class Node:
    def __init__(self,value):
        self.value=value
        self.next=None
class LinkedList:
    def __init__(self):
        self.head=None
    def InsertBegin(self,newValue):
        newNode=Node(newValue)
        if(self.head is None):
            self.head=newNode
            return
        else:
            newNode.next=self.head
            self.head=newNode
    def InsertEnd(self,newValue):
        newNode=Node(newValue)
        if(self.head is None):
            self.head=newNode
            return
        else:
            temp=self.head
            while(temp.next):
                temp=temp.next
            temp.next=newNode
    
    def display(self):
        print()
        print("The linked list is:")
        temp=self.head
        while(temp):
            print(temp.value,end=" ")
            temp=temp.next
    def deleteBegin(self):
        if(self.head is None):
            print("Linked List is Empty")
            return
        else:
            temp=self.head
            self.head=temp.next
            return
    def printreverse(self):
        l=[]
        temp=self.head
        while(temp):
            l.append(temp.value)
            temp=temp.next
        return l[::-1]
Llist=LinkedList()
Llist.InsertBegin(15)
Llist.display()
Llist.InsertBegin(5)
Llist.InsertBegin(150)
Llist.InsertEnd(20)
Llist.display()

Llist.display()
l=Llist.printreverse()
#print(l)
